{"version":3,"file":"static/js/815.43c2ed9f.chunk.js","mappings":"sNAIaA,EAAb,0CACE,0CACE,gBA4BMC,uBAAyB,WAC/B,IAAMC,EAAO,CACXC,UAA8B,IAApBC,SAASC,QAGrB,EAAKC,gBAAgB,iBAAkBJ,EACxC,EAjCCE,SAASG,iBACP,mBACA,EAAKN,wBACL,GALJ,CAOC,CARH,sCAUE,WACE,MAAMO,KAAKC,cAAc,0BAC1B,GAZH,8DAcE,yFACQD,KAAKC,cAAc,2BAD3B,gDAdF,yHAkBE,4GACS,CAAEC,IAAK,KADhB,2CAlBF,qHAsBE,4GACS,CAAEP,UAA8B,IAApBC,SAASC,SAD9B,2CAtBF,wHA0BE,yFACQG,KAAKC,cAAc,2BAD3B,gDA1BF,2D,QAA4BE,G","sources":["../node_modules/@capacitor/app/src/web.ts"],"sourcesContent":["import { WebPlugin } from '@capacitor/core';\n\nimport type { AppInfo, AppPlugin, AppLaunchUrl, AppState } from './definitions';\n\nexport class AppWeb extends WebPlugin implements AppPlugin {\n  constructor() {\n    super();\n    document.addEventListener(\n      'visibilitychange',\n      this.handleVisibilityChange,\n      false,\n    );\n  }\n\n  exitApp(): Promise<void> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n\n  async getInfo(): Promise<AppInfo> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n\n  async getLaunchUrl(): Promise<AppLaunchUrl> {\n    return { url: '' };\n  }\n\n  async getState(): Promise<AppState> {\n    return { isActive: document.hidden !== true };\n  }\n\n  async minimizeApp(): Promise<void> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n\n  private handleVisibilityChange = () => {\n    const data = {\n      isActive: document.hidden !== true,\n    };\n\n    this.notifyListeners('appStateChange', data);\n  };\n}\n"],"names":["AppWeb","handleVisibilityChange","data","isActive","document","hidden","notifyListeners","addEventListener","this","unimplemented","url","WebPlugin"],"sourceRoot":""}